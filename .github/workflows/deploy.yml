name: CI/CD

on:
  push:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/chatgpt-ghibli-flow

jobs:
  ci-check-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install All Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Application Check
        run: pnpm build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: buildx

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: SSH into Server and Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || '22' }}
          script: |
            cd ${{ secrets.PROJECT_PATH_ON_SERVER }} || { echo "Failed to cd into project directory"; exit 1; }

            if [ ! -f ".env" ]; then
              echo "Error: .env file not found on the server in $(pwd). Deployment aborted."
              exit 1
            fi
            if [ ! -f "cookies.json" ]; then
              echo "Error: cookies.json file not found on the server in $(pwd). Deployment aborted."
              exit 1
            fi
            if [ ! -f "docker-compose.yml" ]; then
              echo "Error: docker-compose.yml file not found on the server in $(pwd). Deployment aborted."
              exit 1
            fi

            echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            IMAGE_TO_PULL="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"

            docker pull "$IMAGE_TO_PULL"

            docker-compose down

            docker-compose up -d

            docker image prune -f
