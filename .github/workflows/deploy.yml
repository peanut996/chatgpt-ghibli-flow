name: CI/CD

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      workflow_type:
        description: 'Choose workflow to run'
        required: true
        default: 'both'
        type: choice
        options:
          - build
          - deploy
          - both

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/chatgpt-ghibli-flow

jobs:
  build:
    if: github.event.inputs.workflow_type == 'build' || github.event.inputs.workflow_type == 'both' || github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install All Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Application Check
        run: pnpm build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: buildx

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    if: github.event.inputs.workflow_type == 'deploy' || github.event.inputs.workflow_type == 'both' || github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build
    environment: production
    steps:
      - name: SSH into Server and Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || '22' }}
          script: |
            # Create .env file from environment variable
            echo "${{ secrets.ENV_FILE_CONTENT }}" > .env

            # Create cookies.json from environment variable
            echo "${{ secrets.COOKIES_JSON_CONTENT }}" > cookies.json

            echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            IMAGE_TO_PULL="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"

            docker pull "$IMAGE_TO_PULL"

            echo "Stopping existing container..."
            docker stop ghibli-flow-app || echo "Container not found or stopped."
            echo "Removing existing container..."
            docker rm ghibli-flow-app || echo "Container not found."

            echo "Starting new container..."
            docker run -d \
              --name ghibli-flow-app \
              --restart unless-stopped \
              -p 3000:3000 \
              -v "${PWD}/cookies.json":/app/cookies.json:ro \
              -v "${PWD}/.env":/app/.env:ro \
              -e NODE_ENV=production \
              -e TERM=dumb \
              -e COOKIES_FILE_PATH=/app/cookies.json \
              "$IMAGE_TO_PULL"

            echo "Pruning old images..."
            docker image prune -f
            echo "ðŸš€ Deployment completed successfully."
